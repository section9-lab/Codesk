// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {claude} from '../models';
import {model} from '../models';
import {checkpoint} from '../models';

export function CancelClaude(arg1:string):Promise<void>;

export function CheckClaudeVersion():Promise<boolean>;

export function CleanupFinishedProcesses():Promise<number>;

export function CleanupOldCheckpoints(arg1:number):Promise<number>;

export function ClearCheckpointManager(arg1:string):Promise<void>;

export function ContinueClaude(arg1:string,arg2:string,arg3:string):Promise<claude.ExecuteResult>;

export function CreateAgent(arg1:model.Agent):Promise<void>;

export function CreateCheckpoint(arg1:string,arg2:string,arg3:string,arg4:any,arg5:any):Promise<checkpoint.CheckpointResult>;

export function CreateProject(arg1:string):Promise<void>;

export function DeleteAgent(arg1:number):Promise<void>;

export function DeleteSlashCommand(arg1:string):Promise<void>;

export function ExecuteAgent(arg1:number,arg2:string,arg3:string):Promise<model.AgentRun>;

export function ExecuteClaude(arg1:string,arg2:string,arg3:string):Promise<claude.ExecuteResult>;

export function ExportAgent(arg1:number):Promise<model.AgentExport>;

export function ExportAgentToJSON(arg1:number):Promise<string>;

export function FindClaudeMdFiles(arg1:string):Promise<Array<claude.ClaudeMdFile>>;

export function ForkFromCheckpoint(arg1:string,arg2:string,arg3:string,arg4:string,arg5:any):Promise<checkpoint.CheckpointResult>;

export function GetAgent(arg1:number):Promise<model.Agent>;

export function GetAgentRun(arg1:number):Promise<model.AgentRun>;

export function GetAgentSessionOutput(arg1:string,arg2:string):Promise<string>;

export function GetAgentSessionStatus(arg1:string,arg2:string):Promise<string>;

export function GetCheckpointDiff(arg1:string,arg2:string,arg3:string,arg4:string):Promise<checkpoint.CheckpointDiff>;

export function GetCheckpointSettings(arg1:string,arg2:string,arg3:string):Promise<checkpoint.CheckpointSettings>;

export function GetClaudeSessionOutput(arg1:string,arg2:string):Promise<string>;

export function GetClaudeSessionStatus(arg1:string,arg2:string):Promise<string>;

export function GetClaudeSettings():Promise<model.ClaudeSettings>;

export function GetHomeDirectory():Promise<string>;

export function GetProjectSessions(arg1:string):Promise<Array<model.Session>>;

export function GetProxySettings():Promise<model.ProxySettings>;

export function GetRecentlyModifiedFiles(arg1:string,arg2:number):Promise<Array<string>>;

export function GetSessionStats(arg1:string,arg2:string):Promise<model.SessionStats>;

export function GetSessionTimeline(arg1:string,arg2:string,arg3:string):Promise<checkpoint.SessionTimeline>;

export function GetSlashCommand(arg1:string):Promise<model.SlashCommand>;

export function GetUsageByDateRange(arg1:string,arg2:string):Promise<model.UsageByDateRange>;

export function GetUsageStats():Promise<model.UsageStats>;

export function ImportAgent(arg1:model.AgentExport):Promise<model.Agent>;

export function ImportAgentFromJSON(arg1:string):Promise<model.Agent>;

export function KillAgentSession(arg1:string):Promise<void>;

export function ListAgentRuns(arg1:number):Promise<Array<model.AgentRun>>;

export function ListAgents():Promise<Array<model.Agent>>;

export function ListCheckpoints(arg1:string,arg2:string,arg3:string):Promise<Array<checkpoint.Checkpoint>>;

export function ListClaudeInstallations():Promise<Array<string>>;

export function ListDirectoryContents(arg1:string):Promise<Array<claude.FileEntry>>;

export function ListProjects():Promise<Array<model.Project>>;

export function ListRunningClaudeSessions():Promise<Array<Record<string, any>>>;

export function ListSlashCommands():Promise<Array<model.SlashCommand>>;

export function LoadSessionHistory(arg1:string,arg2:string):Promise<model.SessionHistory>;

export function MCPAddServer(arg1:string,arg2:model.MCPServer):Promise<void>;

export function MCPAddServerFromJSON(arg1:string,arg2:string):Promise<void>;

export function MCPGetServer(arg1:string):Promise<model.MCPServer>;

export function MCPGetServerStatus(arg1:string):Promise<model.MCPServerStatus>;

export function MCPListServers():Promise<Record<string, model.MCPServer>>;

export function MCPReadProjectConfig(arg1:string):Promise<model.MCPProjectConfig>;

export function MCPRemoveServer(arg1:string):Promise<void>;

export function MCPResetProjectChoices(arg1:string):Promise<void>;

export function MCPSaveProjectConfig(arg1:model.MCPProjectConfig):Promise<void>;

export function MCPTestConnection(arg1:string):Promise<boolean>;

export function OpenExternal(arg1:string):Promise<void>;

export function OpenFileDialog(arg1:Record<string, any>):Promise<Array<string>>;

export function OpenNewSession():Promise<string>;

export function ReadClaudeMdFile(arg1:string):Promise<string>;

export function RestoreCheckpoint(arg1:string,arg2:string,arg3:string,arg4:string):Promise<void>;

export function ResumeClaude(arg1:string,arg2:string,arg3:string):Promise<claude.ExecuteResult>;

export function SaveClaudeMdFile(arg1:string,arg2:string):Promise<void>;

export function SaveClaudeSettings(arg1:model.ClaudeSettings):Promise<void>;

export function SaveFileDialog(arg1:Record<string, any>):Promise<string>;

export function SaveProxySettings(arg1:model.ProxySettings):Promise<void>;

export function SaveSlashCommand(arg1:model.SlashCommand):Promise<void>;

export function SearchFiles(arg1:string,arg2:string,arg3:number):Promise<Array<string>>;

export function StorageDeleteRow(arg1:string,arg2:number):Promise<void>;

export function StorageExecuteSQL(arg1:string,arg2:Array<any>):Promise<model.SQLResult>;

export function StorageInsertRow(arg1:string,arg2:model.TableRow):Promise<void>;

export function StorageListTables():Promise<Array<model.TableInfo>>;

export function StorageReadTable(arg1:string,arg2:number,arg3:number):Promise<Array<model.TableRow>>;

export function StorageResetDatabase():Promise<void>;

export function StorageUpdateRow(arg1:string,arg2:number,arg3:model.TableRow):Promise<void>;

export function TrackCheckpointMessage(arg1:string,arg2:string,arg3:string,arg4:string):Promise<void>;

export function TrackFileModification(arg1:string,arg2:string,arg3:string,arg4:string):Promise<void>;

export function UpdateAgent(arg1:model.Agent):Promise<void>;

export function UpdateCheckpointSettings(arg1:string,arg2:string,arg3:string,arg4:checkpoint.CheckpointSettings):Promise<void>;
